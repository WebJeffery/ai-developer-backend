# -*- coding:utf-8 -*-

from typing import Optional
from pydantic import BaseModel, ConfigDict, Field

from app.core.base_schema import BaseSchema


class {{ table_name|snake_to_pascal_case }}CreateSchema(BaseModel):
    """
    {{ function_name }}新增模型
    """

    {% for column in columns %}
    {{ column.column_name }}: Optional[{{ column.python_type }}] = Field(default=None, description='{{ column.column_comment }}')
    {% endfor %}


class {{ table_name|snake_to_pascal_case }}UpdateSchema({{ table_name|snake_to_pascal_case }}CreateSchema):
    """
    {{ function_name }}更新模型
    """
    ...


class {{ table_name|snake_to_pascal_case }}OutSchema({{ table_name|snake_to_pascal_case }}CreateSchema, BaseSchema):
    """
    {{ function_name }}响应模型
    """
    model_config = ConfigDict(from_attributes=True)
